import { Inject, Injectable, } from '@angular/core';
import { EventArgumentToken } from './event-argument';
import { IoService } from './io.service';
import * as i0 from "@angular/core";
export class IoFactoryService {
    constructor(differs, cfr, eventArgument, cdr) {
        this.differs = differs;
        this.cfr = cfr;
        this.eventArgument = eventArgument;
        this.cdr = cdr;
    }
    create() {
        return new IoService(this.differs, this.cfr, this.eventArgument, this.cdr);
    }
}
/** @nocollapse */ /** @nocollapse */ IoFactoryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: IoFactoryService, deps: [{ token: i0.KeyValueDiffers }, { token: i0.ComponentFactoryResolver }, { token: EventArgumentToken }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ /** @nocollapse */ IoFactoryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: IoFactoryService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: IoFactoryService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i0.KeyValueDiffers }, { type: i0.ComponentFactoryResolver }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [EventArgumentToken]
                }] }, { type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW8tZmFjdG9yeS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZHluYW1pYy1jb21wb25lbnQvc3JjL2xpYi9pby9pby1mYWN0b3J5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUdMLE1BQU0sRUFDTixVQUFVLEdBRVgsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFHekMsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQixZQUNVLE9BQXdCLEVBQ3hCLEdBQTZCLEVBRTdCLGFBQXFCLEVBQ3JCLEdBQXNCO1FBSnRCLFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQ3hCLFFBQUcsR0FBSCxHQUFHLENBQTBCO1FBRTdCLGtCQUFhLEdBQWIsYUFBYSxDQUFRO1FBQ3JCLFFBQUcsR0FBSCxHQUFHLENBQW1CO0lBQzdCLENBQUM7SUFFSixNQUFNO1FBQ0osT0FBTyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDN0UsQ0FBQzs7bUpBWFUsZ0JBQWdCLHlGQUlqQixrQkFBa0I7dUpBSmpCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUQ1QixVQUFVOzswQkFLTixNQUFNOzJCQUFDLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gIEluamVjdCxcbiAgSW5qZWN0YWJsZSxcbiAgS2V5VmFsdWVEaWZmZXJzLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgRXZlbnRBcmd1bWVudFRva2VuIH0gZnJvbSAnLi9ldmVudC1hcmd1bWVudCc7XG5pbXBvcnQgeyBJb1NlcnZpY2UgfSBmcm9tICcuL2lvLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSW9GYWN0b3J5U2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZGlmZmVyczogS2V5VmFsdWVEaWZmZXJzLFxuICAgIHByaXZhdGUgY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgQEluamVjdChFdmVudEFyZ3VtZW50VG9rZW4pXG4gICAgcHJpdmF0ZSBldmVudEFyZ3VtZW50OiBzdHJpbmcsXG4gICAgcHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxuICApIHt9XG5cbiAgY3JlYXRlKCkge1xuICAgIHJldHVybiBuZXcgSW9TZXJ2aWNlKHRoaXMuZGlmZmVycywgdGhpcy5jZnIsIHRoaXMuZXZlbnRBcmd1bWVudCwgdGhpcy5jZHIpO1xuICB9XG59XG4iXX0=
import { ElementRef, Directive, Input, Component, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
class HighlighterDirective {
    /**
     * @param {?} eltRef
     */
    constructor(eltRef) {
        this.eltRef = eltRef;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.eltRef.nativeElement.innerHTML = Prism.highlight(this.content, Prism.languages[this.language]);
    }
}
HighlighterDirective.ɵfac = function HighlighterDirective_Factory(t) { return new (t || HighlighterDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
HighlighterDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HighlighterDirective, selectors: [["", "highlighter", ""]], inputs: { language: "language", content: "content" } });
/** @nocollapse */
HighlighterDirective.ctorParameters = () => [
    { type: ElementRef, },
];
HighlighterDirective.propDecorators = {
    "language": [{ type: Input },],
    "content": [{ type: Input },],
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighlighterDirective, [{
        type: Directive,
        args: [{
                selector: '[highlighter]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { language: [{
            type: Input
        }], content: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class HandySyntaxHighlighterComponent {
}
HandySyntaxHighlighterComponent.ɵfac = function HandySyntaxHighlighterComponent_Factory(t) { return new (t || HandySyntaxHighlighterComponent)(); };
HandySyntaxHighlighterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: HandySyntaxHighlighterComponent, selectors: [["handy-syntax-highlighter"]], inputs: { language: "language", content: "content" }, decls: 4, vars: 5, consts: [["highlighter", "", 3, "language", "content"]], template: function HandySyntaxHighlighterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "pre");
        ɵngcc0.ɵɵtext(1, "      ");
        ɵngcc0.ɵɵelement(2, "code", 0);
        ɵngcc0.ɵɵtext(3, "\n    ");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("language-", ctx.language, "");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("language", ctx.language)("content", ctx.content);
    } }, directives: [HighlighterDirective], styles: [".tag[_ngcontent-%COMP%]{font-size:14px!important;padding:0!important}.h1-top[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#1f2021}pre[_ngcontent-%COMP%]{font-size:14px!important;line-height:1.4!important;padding-bottom:0!important}"] });
/** @nocollapse */
HandySyntaxHighlighterComponent.ctorParameters = () => [];
HandySyntaxHighlighterComponent.propDecorators = {
    "language": [{ type: Input },],
    "content": [{ type: Input },],
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HandySyntaxHighlighterComponent, [{
        type: Component,
        args: [{
                selector: 'handy-syntax-highlighter',
                styles: [`.tag{font-size:14px!important;padding:0!important}.h1-top a{color:#1f2021}pre{font-size:14px!important;line-height:1.4!important;padding-bottom:0!important}`],
                template: `
        <pre class="language-{{language}}">
      <code highlighter [language]="language" [content]="content"></code>
    </pre>
    `
            }]
    }], null, { language: [{
            type: Input
        }], content: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class Ng2HandySyntaxHighlighterModule {
}
Ng2HandySyntaxHighlighterModule.ɵfac = function Ng2HandySyntaxHighlighterModule_Factory(t) { return new (t || Ng2HandySyntaxHighlighterModule)(); };
Ng2HandySyntaxHighlighterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2HandySyntaxHighlighterModule });
Ng2HandySyntaxHighlighterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
/** @nocollapse */
Ng2HandySyntaxHighlighterModule.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2HandySyntaxHighlighterModule, [{
        type: NgModule,
        args: [{
                declarations: [HighlighterDirective, HandySyntaxHighlighterComponent],
                exports: [HandySyntaxHighlighterComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2HandySyntaxHighlighterModule, { declarations: [HighlighterDirective, HandySyntaxHighlighterComponent], exports: [HandySyntaxHighlighterComponent] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { Ng2HandySyntaxHighlighterModule, HandySyntaxHighlighterComponent as ɵb, HighlighterDirective as ɵa };

//# sourceMappingURL=ng2-handy-syntax-highlighter.js.map